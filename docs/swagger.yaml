basePath: /
definitions:
  dto.ErrorResponse:
    properties:
      error:
        example: invalid request
        type: string
    type: object
  dto.GameDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.PlayerScoreDTO:
    properties:
      game_name:
        type: string
      points:
        type: integer
      username:
        type: string
    type: object
  dto.ScoreStatisticsDTO:
    properties:
      game_id:
        type: integer
      game_name:
        type: string
      mean:
        type: number
      median:
        type: number
      mode:
        items:
          type: integer
        type: array
    type: object
  handler.AuthRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handler.SubmitScoreRequest:
    properties:
      game_id:
        type: integer
      player_id:
        type: integer
      points:
        type: integer
    required:
    - game_id
    - player_id
    - points
    type: object
host: localhost:8080
info:
  contact:
    email: martin@example.com
    name: Mart√≠n Arias
  description: API for managing players, games and scores
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: Scoring API
  version: "1.0"
paths:
  /api/games:
    get:
      description: Retrieves all available games
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.GameDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: List games
      tags:
      - games
    post:
      consumes:
      - application/json
      description: Adds a new game to the system
      parameters:
      - description: Game name
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.GameDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.GameDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a game
      tags:
      - games
  /api/scores:
    put:
      consumes:
      - application/json
      description: Submits or updates the score for a player in a specific game
      parameters:
      - description: Score data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SubmitScoreRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Submit a score
      tags:
      - scores
  /api/scores/game:
    get:
      description: Lists player scores for a specific game
      parameters:
      - description: Game ID
        in: query
        name: game_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.PlayerScoreDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get scores by game
      tags:
      - scores
  /api/scores/game/stats:
    get:
      description: Calculates mean, median, and mode for a game's scores
      parameters:
      - description: Game ID
        in: query
        name: game_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ScoreStatisticsDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get game score statistics
      tags:
      - scores
  /api/scores/user:
    get:
      description: Lists game scores for a specific player
      parameters:
      - description: Player ID
        in: query
        name: player_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.PlayerScoreDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get scores by player
      tags:
      - scores
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a user with a username and password
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.AuthRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
